.TH "PITController< ChID >" 3 "Fri Nov 12 2021" "Version 1.0" "DIY Auto-Correlator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PITController< ChID > \- Interface for PIT timers on Teensy 4\&.x microcontrollers\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <pit\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPITController\fP ()"
.br
.ti -1c
.RI "void \fBstart\fP () __attribute__((always_inline))"
.br
.RI "Start counting on the timer\&. "
.ti -1c
.RI "void \fBstop\fP () __attribute__((always_inline))"
.br
.RI "stop counting on the timer\&. "
.ti -1c
.RI "\fBError_t\fP \fBset_gate_time\fP (double gt_microseconds) __attribute__((flatten))"
.br
.RI "Sets the gate time after which the counter returns to zero and marks the end of onegate interval\&. "
.ti -1c
.RI "double \fBperiod_error_us\fP () const __attribute__((always_inline))"
.br
.RI "Returns the error in the gate timing period due to the finite resolution of the timers\&.  Error in microseconds\&. "
.ti -1c
.RI "double \fBtick_period_us\fP () __attribute__((always_inline))"
.br
.RI "Returns the value of one \fBTick\fP - Minimum resolution of the timer\&. "
.ti -1c
.RI "void \fBinterrupt\fP () __attribute__((always_inline))"
.br
.RI "Enable Interruptsthat are triggered after one gate time completion\&. "
.ti -1c
.RI "void \fBno_interrupt\fP () __attribute__((always_inline))"
.br
.RI "Disable Interrupts that are triggered after one gate time completion\&. "
.ti -1c
.RI "void \fBclear_interrupt_flag\fP () __attribute__((always_inline))"
.br
.RI "Clears the interrupt flag and hence prepares the timer for the next gate interval\&. The clearing has to be done manually\&. If the flag is not cleared, the interrupt will be called again and again\&. "
.ti -1c
.RI "void \fBsel_FBUS_clock\fP () __attribute__((always_inline))"
.br
.RI "Sets the clock source frequency of all PIT channels to the value F_BUS_ACTUAL (= F_CPU_ACTUAL / 4 ) which is nominally 150 MHz\&. The exact value depends on the CPU clock rate\&. "
.ti -1c
.RI "void \fBsel_24MHz_clock\fP () __attribute__((always_inline))"
.br
.RI "Sets the source clock frequency of all PIT channels to 24 MHz which is the default oscillator clock\&. This setting is also the default state, if no clock is selected\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBenable_PITs\fP () __attribute__((always_inline))"
.br
.RI "Enable all PIT channels\&. "
.ti -1c
.RI "static void \fBdisable_PITs\fP () __attribute__((always_inline))"
.br
.RI "Disable all PIT Channels\&. "
.ti -1c
.RI "static void \fBpause_resume_PITs\fP () __attribute__((always_inline))"
.br
.RI "Pause/Resume - \fBToggle\fP \fBall\fP \fBPIT\fP \fBChannels\fP\&. "
.ti -1c
.RI "unsigned static int \fBget_xbar_in_pin\fP () __attribute__((always_inline))"
.br
.RI "Returns the correspoding XBAR1-A Input Pins for the corresponding channel TRIGGER signal\&. "
.ti -1c
.RI "static void \fBset_interrupt\fP (void(*\fBisr_fn\fP)(), unsigned int priority) __attribute__((always_inline))"
.br
.RI "Sets a common ISR and its priority for all PIT Channels\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "double \fBActual_period\fP = 0"
.br
.RI "Actual Time Period set by the device due to finite resolution\&. "
.ti -1c
.RI "double \fBReq_period\fP = 0"
.br
.RI "Time Period requested by the user\&. "
.ti -1c
.RI "uint32_t \fBClk_freq\fP = uint32_t(24 * 1e6)"
.br
.RI "Clock frequency used by the timer\&. Initalized to 24MHz → default oscillator clock\&. "
.ti -1c
.RI "uint32_t \fBLoadVal\fP = 0"
.br
.RI "The value loaded in to the counter during after overflow\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const constexpr uint32_t \fBPIT_MAX_COUNTER\fP = 4294967295"
.br
.RI "Constant - Maximum possible counter value\&. 32 bit counter\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<unsigned int ChID>
.br
class PITController< ChID >"
Interface for PIT timers on Teensy 4\&.x microcontrollers\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<unsigned int ChID> \fBPITController\fP< ChID >::\fBPITController\fP ()\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::clear_interrupt_flag ()\fC [inline]\fP"

.PP
Clears the interrupt flag and hence prepares the timer for the next gate interval\&. The clearing has to be done manually\&. If the flag is not cleared, the interrupt will be called again and again\&. 
.SS "template<unsigned int ChID> static void \fBPITController\fP< ChID >::disable_PITs ()\fC [inline]\fP, \fC [static]\fP"

.PP
Disable all PIT Channels\&. 
.SS "template<unsigned int ChID> static void \fBPITController\fP< ChID >::enable_PITs ()\fC [inline]\fP, \fC [static]\fP"

.PP
Enable all PIT channels\&. 
.SS "template<unsigned int ChID> unsigned static int \fBPITController\fP< ChID >::get_xbar_in_pin ()\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the correspoding XBAR1-A Input Pins for the corresponding channel TRIGGER signal\&. 
.PP
\fBAttention:\fP
.RS 4
Reference - Manual Page 63\&. 
.PP
This function does not initalize the xbar channels\&. It only returns the corresponding pin\&. 
.RE
.PP

.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::interrupt ()\fC [inline]\fP"

.PP
Enable Interruptsthat are triggered after one gate time completion\&. 
.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::no_interrupt ()\fC [inline]\fP"

.PP
Disable Interrupts that are triggered after one gate time completion\&. 
.SS "template<unsigned int ChID> static void \fBPITController\fP< ChID >::pause_resume_PITs ()\fC [inline]\fP, \fC [static]\fP"

.PP
Pause/Resume - \fBToggle\fP \fBall\fP \fBPIT\fP \fBChannels\fP\&. 
.SS "template<unsigned int ChID> double \fBPITController\fP< ChID >::period_error_us () const\fC [inline]\fP"

.PP
Returns the error in the gate timing period due to the finite resolution of the timers\&.  Error in microseconds\&. 
.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::sel_24MHz_clock ()\fC [inline]\fP"

.PP
Sets the source clock frequency of all PIT channels to 24 MHz which is the default oscillator clock\&. This setting is also the default state, if no clock is selected\&. 
.PP
\fBWarning:\fP
.RS 4
This will change the clock source for all 4 PITs and also the 2 GPTs\&. 
.RE
.PP

.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::sel_FBUS_clock ()\fC [inline]\fP"

.PP
Sets the clock source frequency of all PIT channels to the value F_BUS_ACTUAL (= F_CPU_ACTUAL / 4 ) which is nominally 150 MHz\&. The exact value depends on the CPU clock rate\&. 
.PP
\fBWarning:\fP
.RS 4
This will change the clock source for all 4 PITs and also the 2 GPTs\&. 
.RE
.PP

.SS "template<unsigned int ChID> \fBError_t\fP \fBPITController\fP< ChID >::set_gate_time (double gt_microseconds)\fC [inline]\fP"

.PP
Sets the gate time after which the counter returns to zero and marks the end of onegate interval\&. 
.PP
\fBAttention:\fP
.RS 4
In case of an error, the gate time is set to the maximum\&. 
.PP
The clock source must be selected before calling this function\&. 
.RE
.PP

.SS "template<unsigned int ChID> static void \fBPITController\fP< ChID >::set_interrupt (void(*)() isr_fn, unsigned int priority)\fC [inline]\fP, \fC [static]\fP"

.PP
Sets a common ISR and its priority for all PIT Channels\&. 
.PP
\fBNote:\fP
.RS 4
All PIT channels share a single ISR on Teensy 4\&.x micro-controllers\&. 
.RE
.PP

.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::start ()\fC [inline]\fP"

.PP
Start counting on the timer\&. 
.SS "template<unsigned int ChID> void \fBPITController\fP< ChID >::stop ()\fC [inline]\fP"

.PP
stop counting on the timer\&. 
.SS "template<unsigned int ChID> double \fBPITController\fP< ChID >::tick_period_us ()\fC [inline]\fP"

.PP
Returns the value of one \fBTick\fP - Minimum resolution of the timer\&. 
.SH "Member Data Documentation"
.PP 
.SS "template<unsigned int ChID> double \fBPITController\fP< ChID >::Actual_period = 0"

.PP
Actual Time Period set by the device due to finite resolution\&. 
.SS "template<unsigned int ChID> uint32_t \fBPITController\fP< ChID >::Clk_freq = uint32_t(24 * 1e6)"

.PP
Clock frequency used by the timer\&. Initalized to 24MHz → default oscillator clock\&. 
.SS "template<unsigned int ChID> uint32_t \fBPITController\fP< ChID >::LoadVal = 0"

.PP
The value loaded in to the counter during after overflow\&. 
.SS "template<unsigned int ChID> const constexpr uint32_t \fBPITController\fP< ChID >::PIT_MAX_COUNTER = 4294967295\fC [static]\fP"

.PP
Constant - Maximum possible counter value\&. 32 bit counter\&. 
.SS "template<unsigned int ChID> double \fBPITController\fP< ChID >::Req_period = 0"

.PP
Time Period requested by the user\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for DIY Auto-Correlator from the source code\&.
